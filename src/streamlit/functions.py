import streamlit as st
import pandas as pd

from typing import Literal


def get_analytics():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É.

    Parameters
    ----------
    df : pd.DataFrame
        –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª.

    Returns
    -------
    analytics : pd.DataFrame
        –ö–∞–¥—Ä –¥–∞–Ω–Ω—ã—Ö, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∞–Ω–∞–ª–∏—Ç–∏–∫—É.
    """
    pass


def train_model():
    pass


def inference_model():
    pass


def create_template(
    is_uploaded: bool,
    template_type: Literal['–ö–æ—Ç–∏—Ä–æ–≤–∫–∏ –≤–∞–ª—é—Ç', '–ê–∫—Ü–∏–∏']
) -> None:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.

    Parameters
    ----------
    is_uploaded : bool
        –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∂–∞–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞.
    template_type : str
        –¢–∏–ø —à–∞–±–ª–æ–Ω–∞
    """
    st.header('–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö üîª')

    uploaded_file = st.file_uploader(
        label='–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª',
        key=template_type
    )
    if uploaded_file is not None:
        # df = pd.read_csv(uploaded_file)
        is_uploaded = True

    if is_uploaded:
        st.header('–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ñ–∞–π–ª–∞ üìä')
        analytics = get_analytics()

        st.header('–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ üîß')
        train_model()

        st.header('–ò–Ω—Ñ–µ—Ä–µ–Ω—Å –º–æ–¥–µ–ª–∏ üî•')
        inference_model()
